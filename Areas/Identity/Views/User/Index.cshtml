@model UserListModel
@{
    ViewData["Title"] = "Danh sách các thành viên";
    Layout = "_Layout"; 
}

<div class="auth-container">
    <div class="auth-header">
        <h1 class="auth-title">
            <i class="fas fa-users me-2"></i>@ViewData["Title"]
        </h1>
        <p class="text-muted">Tổng số thành viên: <strong>@Model.totalUsers</strong></p>
    </div>

    <partial name="_StatusMessage" />

    <div class="row justify-content-center">
        <div class="col-md-10">
            <div class="card auth-card">
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-hover align-middle mb-0">
                            <thead>
                                <tr>
                                    <th class="bg-light text-dark">Tên user</th>
                                    <th class="bg-light text-dark">Vai trò (role)</th>
                                    <th class="bg-light text-dark">Tác vụ</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var user in Model.users)
                                {
                                    <tr>
                                        <td>
                                            <div class="d-flex align-items-center">
                                                <div class="avatar-placeholder me-3">
                                                    @user.UserName.Substring(0, 1).ToUpper()
                                                </div>
                                                <div>
                                                    <h6 class="mb-0 fw-semibold">@user.UserName</h6>
                                                    <small class="text-muted">ID: @user.Id</small>
                                                </div>
                                            </div>
                                        </td>
                                        <td>
                                            @if (string.IsNullOrEmpty(user.RoleNames))
                                            {
                                                <a class="btn btn-outline-primary btn-sm" asp-action="AddRole" asp-route-id="@user.Id">
                                                    <i class="fas fa-plus-circle me-1"></i>Thêm role
                                                </a>
                                            }
                                            else
                                            {
                                                <a asp-action="AddRole" asp-route-id="@user.Id" 
                                                   class="btn btn-primary btn-sm">
                                                    <i class="fas fa-user-tag me-1"></i>@user.RoleNames
                                                </a>
                                            }
                                        </td>
                                        <td>
                                            <div class="btn-group">
                                                <a class="btn btn-success btn-sm" asp-action="SetPassword" asp-route-id="@user.Id">
                                                    <i class="fas fa-key me-1"></i>Đặt mật khẩu
                                                </a>
                                                <a class="btn btn-info btn-sm" asp-action="AddClaim" asp-route-userid="@user.Id">
                                                    <i class="fas fa-user-shield me-1"></i>Claims
                                                </a>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>

            @{
                var pagingmodel = new PagingModel()
                {
                    currentpage = Model.currentPage,
                    countpages = Model.countPages,
                    generateUrl = (int? p) => Url.Action("Index", new { p = p})
                };
            }

            <div class="mt-4">
                <partial name="_PagingXTL" model="@pagingmodel" />
            </div>
        </div>
    </div>
</div>

<style>
    .auth-container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 2rem 1rem;
    }

    .auth-header {
        text-align: center;
        margin-bottom: 2rem;
    }

    .auth-title {
        font-size: 2rem;
        font-weight: 600;
        color: #2c3e50;
        margin-bottom: 0.5rem;
    }

    .auth-card {
        border: none;
        border-radius: 15px;
        box-shadow: 0 0 20px rgba(0,0,0,0.05);
        transition: transform 0.2s ease, box-shadow 0.2s ease;
    }

    .auth-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 5px 25px rgba(0,0,0,0.1);
    }

    .table {
        margin-bottom: 0;
    }

    .table th {
        font-weight: 600;
        padding: 1rem;
        border-bottom: 2px solid #dee2e6;
    }

    .table td {
        padding: 1rem;
        vertical-align: middle;
    }

    .table tbody tr {
        transition: all 0.2s ease;
    }

    .table tbody tr:hover {
        background-color: #f8f9fa;
        transform: translateX(5px);
    }

    .avatar-placeholder {
        width: 40px;
        height: 40px;
        border-radius: 50%;
        background: linear-gradient(45deg, #007bff, #00bcd4);
        color: white;
        display: flex;
        align-items: center;
        justify-content: center;
        font-weight: bold;
        font-size: 1.2rem;
    }

    .btn {
        padding: 0.5rem 1rem;
        font-weight: 500;
        border-radius: 8px;
        transition: all 0.2s ease;
    }

    .btn:hover {
        transform: translateY(-2px);
    }

    .btn-sm {
        padding: 0.375rem 0.75rem;
        font-size: 0.875rem;
    }

    .btn-primary {
        background-color: #007bff;
        border-color: #007bff;
    }

    .btn-primary:hover {
        background-color: #0056b3;
        border-color: #0056b3;
        box-shadow: 0 5px 15px rgba(0,123,255,0.3);
    }

    .btn-outline-primary {
        border-color: #007bff;
        color: #007bff;
    }

    .btn-outline-primary:hover {
        background-color: #007bff;
        color: white;
        box-shadow: 0 5px 15px rgba(0,123,255,0.3);
    }

    .btn-success {
        background-color: #28a745;
        border-color: #28a745;
    }

    .btn-success:hover {
        background-color: #218838;
        border-color: #1e7e34;
        box-shadow: 0 5px 15px rgba(40,167,69,0.3);
    }

    .btn-info {
        background-color: #17a2b8;
        border-color: #17a2b8;
        color: white;
    }

    .btn-info:hover {
        background-color: #138496;
        border-color: #117a8b;
        color: white;
        box-shadow: 0 5px 15px rgba(23,162,184,0.3);
    }

    .btn-group {
        gap: 0.5rem;
    }

    .alert {
        border-radius: 10px;
        border: none;
        box-shadow: 0 2px 10px rgba(0,0,0,0.05);
    }

    @@media (max-width: 768px) {
        .auth-container {
            padding: 1rem;
        }

        .auth-title {
            font-size: 1.5rem;
        }

        .table-responsive {
            margin: 0 -1rem;
        }

        .btn-group {
            flex-direction: column;
            width: 100%;
        }

        .btn-group .btn {
            width: 100%;
            margin-bottom: 0.5rem;
        }
    }
</style>


